快速定位bug
      
      ### 一 Bug类型介绍

代码：功能问题，数据问题，流程问题等

界面：UI展示，人机交互友好性，设计合理性等

安全：服务器安全，用户信息安全等

性能：并发量，响应时间，吞吐量等

配置：程序配置文件，服务器配置，数据库配置等

其他：非上述分类

### 二 ：WEB/APP测试异同点

相同点：功能测试，流程测试

不同的：

**WEB:**

- ​		B/S结构   浏览器/服务端
- 性能：主要关注响应时间
- 兼容性：不同浏览器
- 安全性：session过期，cookies加密等

**APP:**

- C/S结构
- 性能：涉及响应时间，电量，内存，流量等
- 兼容性：不同设备星号，系统
- 安全性：反编译，签名，权限等
- 专项测试：健壮性测试，安装卸载更新，手势，横竖屏，前后台切换等

### 三：Bug的定位步骤及方法

#### 1Bug定位步骤

根据测试用例发现不符合预期->对比需求检测是否是测试用例有误-->多次验证以保证问题必现->找产品确认是否是BUG-->

分层确认Bug产生的原因--->保存Bug的关键信息，提交Bug

#### 二 Bug定位方法

##### 1初级定位方法

确认与测试用例预期不一致

找产品确认是否是Bug,或是后期修改

咨询开发同学，再次确定Bug

提交BUG

##### 2中级定位方法

确认与测试用例预期不一致

找产品确认是否是BUG

通过测试工具：WEB (Fiddler,F12),APP(Postman,SoapUI) 初步排查Bug：
保存Bug出现的场景截图

保存日志可能出现的报错信息

##### 3高级定位方法

确认与测试用例预期不一致

找产品确认是否是Bug.或是后期修改：

分层分析Bug可能存在的原因

a 通过测试工具：Fiddler,Postman等初步排查Bug，是否前端引起的，还是后端引起的；

b分析网络请求，接口返回信息，是否符号预期

c 过滤日志，查看是否有报错日志输出，看是否可以定位到出错的函数，代码行等

d 查看redis，memcache,数据库中的数据是否正确

保存出现的场景，截图，日志信息等；

提交Bug,上传排过程钟保存的场景数据。



### 四 Bug的跟踪与验证

#### 一 分级提交Bug,全面记录错场景

Bug分级：

p0 p1 p2 p3 

p0:致命级

开发会根据你的bug级别去优先修改

p1：严重级别

p2: 界面ui等

p3：建议 优化

优先解决p0p1级别

**bug管理工具**

jira 

禅道

Teambition

公司自主研发平台

**Bug管理工具会对Bug进行核心信息的记录**

方便后面项目管理

##### Bug提交模板

前置条件：xxx

测试步骤

1xxx

2xxx

3xxxx

预期结果：xxx

实际结果：xxxx

附件：错误日志，错误界面截图

把错误的地方标出来，提高团队效率。

#### 二关注Bug解决情况

每天定时同步测试情况，Bug提交情况，Bug解决情况：

紧急Bug ,督促开发人员优先解决

后期处理，需求原因引起的Bug需要产品提交备注信息；

开发同学及时修改Bug状态，引起原因及解决办法。

#### 三Bug的验证

按轮次进行测试，尽量发现所有Bug：

分轮进行Bug验证，不可随时验证Bug

仿真环境/沙箱环境，回归所有bug

上线后全面回归，多关注Bug,把自己当作一个用户，把所有模块再测一遍，侧重于之前出现bug的地方

#### 四测试报告之bug分析

测试报告必须有Bug信息，图表信息

分析Bug产生的原因，及可以避免的策略

进行批评和自我批评，反馈测试在项目钟存在的问题

### 五案例分析

针对前后端分离得产品，出现WEB面登录失败，改如何分析并提出最根本得bug

分析：

账号密码错误？前端展示提示信息有误？

后端数据库配置错误？

前端页面配置错误？

.....

解决：

使用Fiddler,F12查看请求和响应

查看服务器日志

查看数据库信息，配置文件

分析结果，提出bug



联调：自己经过初步分析，判断是前端还是后端出得·bug





第二个案例

APP提交订单按钮后，页面跳转不正确？

分析：

APP问题

后台问题

解决：

使用SoapU测试接口，查看响应结果

查看服务器日志

查看数据库状态

分析结果，提出bug

